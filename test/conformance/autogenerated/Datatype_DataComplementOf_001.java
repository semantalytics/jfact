package conformance.autogenerated;

import junit.framework.TestCase;
import conformance.Factory;
import conformance.JUnitRunner;
import conformance.TestClasses;

public class Datatype_DataComplementOf_001 extends TestCase {
	public void testDatatype_DataComplementOf_001() {
		String premise = "<?xml version=\"1.0\"?>\n" + "<rdf:RDF\n" + "  xml:base  = \"http://example.org/\"\n" + "  xmlns     = \"http://example.org/\"\n" + "  xmlns:owl = \"http://www.w3.org/2002/07/owl#\"\n" + "  xmlns:rdf = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n"
				+ "  xmlns:rdfs= \"http://www.w3.org/2000/01/rdf-schema#\" >\n" + "\n" + "<owl:Ontology/>\n" + "\n" + "<owl:DatatypeProperty rdf:about=\"p\" />\n" + "\n" + "<rdf:Description rdf:about=\"p\">\n" + "  <rdfs:range>\n" + "    <rdfs:Datatype>\n"
				+ "      <owl:datatypeComplementOf rdf:resource=\"http://www.w3.org/2001/XMLSchema#positiveInteger\" />\n" + "    </rdfs:Datatype>\n" + "  </rdfs:range>\n" + "</rdf:Description>\n" + "\n" + "<rdf:Description rdf:about=\"i\">\n"
				+ "  <p rdf:datatype=\"http://www.w3.org/2001/XMLSchema#negativeInteger\">-1</p>\n" + "  <p rdf:datatype=\"http://www.w3.org/2001/XMLSchema#string\">A string</p>\n" + "</rdf:Description>\n" + "\n" + "</rdf:RDF>";
		String conclusion = "";
		String id = "Datatype_DataComplementOf_001";
		TestClasses tc = TestClasses.valueOf("CONSISTENCY");
		String d = "Demonstrates that the complement of a datatype contains literals from other datatypes.";
		JUnitRunner r = new JUnitRunner(premise, conclusion, id, tc, d);
		r.setReasonerFactory(Factory.factory());
		r.run();
	}
}