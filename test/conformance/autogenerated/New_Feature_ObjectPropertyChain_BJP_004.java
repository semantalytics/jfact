package conformance.autogenerated;

import junit.framework.TestCase;
import conformance.Factory;
import conformance.JUnitRunner;
import conformance.TestClasses;

public class New_Feature_ObjectPropertyChain_BJP_004 extends TestCase {
	public void testNew_Feature_ObjectPropertyChain_BJP_004() {
		String premise = "<?xml version=\"1.0\"?>\n"
				+ "<rdf:RDF\n"
				+ "    xml:base  = \"http://example.org/\"\n"
				+ "    xmlns     = \"http://example.org/\"\n"
				+ "    xmlns:owl = \"http://www.w3.org/2002/07/owl#\"\n"
				+ "    xmlns:rdfs= \"http://www.w3.org/2000/01/rdf-schema#\"\n"
				+ "    xmlns:rdf = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\n"
				+ "\n"
				+ "<owl:Ontology/>\n"
				+ "\n"
				+ "    <rdf:Description rdf:about=\"p\">\n"
				+ "        <owl:propertyChainAxiom rdf:parseType=\"Collection\">\n"
				+ "            <owl:ObjectProperty rdf:about=\"p\"/>\n"
				+ "            <owl:ObjectProperty rdf:about=\"q\"/>\n"
				+ "        </owl:propertyChainAxiom>\n"
				+ "    </rdf:Description>\n" + "    \n"
				+ "    <rdf:Description rdf:about=\"a\">\n"
				+ "        <q rdf:resource=\"b\"/>\n"
				+ "    </rdf:Description>\n" + "    \n"
				+ "    <rdf:Description rdf:about=\"b\">\n"
				+ "        <q rdf:resource=\"c\"/>\n"
				+ "    </rdf:Description>\n" + "   \n" + "</rdf:RDF>";
		String conclusion = "<rdf:RDF\n"
				+ "    xml:base  = \"http://example.org/\"\n"
				+ "    xmlns     = \"http://example.org/\"\n"
				+ "    xmlns:owl = \"http://www.w3.org/2002/07/owl#\"\n"
				+ "    xmlns:rdf = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\n"
				+ "\n" + "   <owl:Ontology/>\n"
				+ "   <owl:ObjectProperty rdf:about=\"p\"/>\n"
				+ "   <owl:TransitiveProperty rdf:about=\"p\"/>\n"
				+ "</rdf:RDF>";
		String id = "New_Feature_ObjectPropertyChain_BJP_004";
		TestClasses tc = TestClasses.valueOf("NEGATIVE_IMPL");
		String d = "A test of an interaction between a role chain +hierarchy and transitivity axioms.";
		JUnitRunner r = new JUnitRunner(premise, conclusion, id, tc, d);
		r.setReasonerFactory(Factory.factory());
		r.run();
	}
}