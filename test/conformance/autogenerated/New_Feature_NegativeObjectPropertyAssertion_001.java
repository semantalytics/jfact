package conformance.autogenerated;

import junit.framework.TestCase;
import conformance.Factory;
import conformance.JUnitRunner;
import conformance.TestClasses;

public class New_Feature_NegativeObjectPropertyAssertion_001 extends TestCase {
	public void testNew_Feature_NegativeObjectPropertyAssertion_001() {
		String premise = "<?xml version=\"1.0\"?>\n" + "<rdf:RDF\n" + "  xml:base  = \"http://example.org/\"\n" + "  xmlns     = \"http://example.org/\"\n" + "  xmlns:owl = \"http://www.w3.org/2002/07/owl#\"\n" + "  xmlns:rdf = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\n"
				+ "\n" + "<owl:Ontology/>\n" + "\n" + "<owl:ObjectProperty rdf:about=\"hasSon\" />\n" + "\n" + "<owl:NegativePropertyAssertion>\n" + "  <owl:sourceIndividual rdf:resource=\"Peter\" />\n" + "  <owl:assertionProperty rdf:resource=\"hasSon\" />\n"
				+ "  <owl:targetIndividual rdf:resource=\"Meg\" />\n" + "</owl:NegativePropertyAssertion>\n" + "\n" + "<rdf:Description rdf:about=\"Peter\">\n" + "  <hasSon rdf:resource=\"Meg\" />\n" + "</rdf:Description>\n" + "\n" + "</rdf:RDF>";
		String conclusion = "";
		String id = "New_Feature_NegativeObjectPropertyAssertion_001";
		TestClasses tc = TestClasses.valueOf("INCONSISTENCY");
		String d = "Demonstrates use of a negative object property assertion to create a trivial inconsistency based on an example in the Structural Specification and Functional-Style Syntax document.";
		JUnitRunner r = new JUnitRunner(premise, conclusion, id, tc, d);
		r.setReasonerFactory(Factory.factory());
		r.run();
	}
}